version: '3.8'

services:
  dns_private:
    container_name: dns_private
    build:
      context: ./containers/dns/private
    restart: 'always'
    ports:
      - 5352:8080
    dns: 1.1.1.1
    networks:
      skynet:
        ipv4_address: 10.0.10.10

  dns_public:
    container_name: dns_public
    build:
      context: ./containers/dns/public
    restart: 'always'
    ports:
      - "53:53/udp"
      - 5353:8080
    dns: 1.1.1.1

  nginx:
    container_name: nginx
    build:
      context: ./containers/nginx
    restart: 'always'
    volumes:
      - ${REPOS_DIR:-./repos}:/repos
      - ./resources/ca:/ca
    ports:
      - 80:80
      - 443:443
    networks:
      skynet:
        ipv4_address: 10.0.10.69

  php80:
    container_name: php80
    build:
      context: ./containers/php/80
    restart: 'always'
    volumes:
      - ${REPOS_DIR:-./repos}:/repos
    working_dir: /repos
    networks:
      skynet:
        ipv4_address: 10.0.10.80
    dns: 10.0.10.10
    depends_on:
      - dns_private

  php74:
    container_name: php74
    build:
      context: ./containers/php/74
    restart: 'always'
    volumes:
      - ${REPOS_DIR:-./repos}:/repos
    working_dir: /repos
    networks:
      skynet:
        ipv4_address: 10.0.10.74
    dns: 10.0.10.10
    depends_on:
      - dns_private

  mysql:
    container_name: mysql
    build:
      context: ./containers/mysql
    restart: 'always'
    ports:
      - 3306:3306
    environment:
      - MYSQL_ALLOW_EMPTY_PASSWORD=1
    command: --default-authentication-plugin=mysql_native_password
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      skynet:
        ipv4_address: 10.0.10.21

  mailhog:
    container_name: mailhog
    build:
      context: ./containers/mailhog
    restart: 'always'
    ports:
      - 1025:1025
    networks:
      skynet:
        ipv4_address: 10.0.10.20

  node:
    container_name: node
    build:
      context: ./containers/node
    restart: 'always'
    ports:
      - 8080:8080
    volumes:
      - ${REPOS_DIR:-./repos}:/repos
    networks:
      skynet:
        ipv4_address: 10.0.10.22

  zookeeper:
    container_name: zookeeper
    build:
      context: ./containers/zookeeper
    restart: 'always'
    ports:
      - 2181:2181
    networks:
      skynet:
        ipv4_address: 10.0.10.23
    dns: 10.0.10.10
    depends_on:
      - dns_private
    environment:
      ALLOW_ANONYMOUS_LOGIN: "yes"

  kafka:
    container_name: kafka
    build:
      context: ./containers/kafka
    restart: 'always'
    ports:
      - 9092:9092
    networks:
      skynet:
        ipv4_address: 10.0.10.24
    dns: 10.0.10.10
    depends_on:
      - dns_private
      - zookeeper
    environment:
      KAFKA_CFG_ZOOKEEPER_CONNECT: zookeeper:2181
      ALLOW_PLAINTEXT_LISTENER: "yes"

  akhq:
    container_name: akhq
    build:
      context: ./containers/akhq
    restart: 'always'
    networks:
      skynet:
        ipv4_address: 10.0.10.25
    dns: 10.0.10.10
    depends_on:
      - dns_private
      - kafka

networks:
  skynet:
    driver: bridge
    driver_opts:
      com.docker.network.enable_ipv6: "false"
    ipam:
      config:
        - subnet: 10.0.10.0/24

volumes:
  mysql_data: