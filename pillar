#!/usr/bin/env bash

function stackHelp {
	echo ""
	echo "  Pillar help"
	echo ""
	echo "      help                                            Display this help information"
	echo "      build                                           Build up stack"
	echo "      rebuild                                         Bring down stack, removing volumes, and build back up"
	echo "      remove                                          Bring down stack, removing volumes"
	echo "      restart                                         Stop and start stack"
	echo "      stop                                            Stop stack"
	echo "      start                                           Start stack"
	echo "      terminal {container}                            Get a terminal in a given container"
	echo "      composer {script} {project} {container}         Run a composer script in a project on a given container"
	echo ""
}

function setDns {
	# theres not a huge garuntee this would work
	# on other machines due to the link defined as number 2 
	# but thats a problem for another day
	sudo resolvectl dns 2 $1
	resolvectl flush-caches
}

function buildStack {
	setDns "84.200.69.80"
	docker compose up -d --build
	setDns "127.0.0.1"
}

function rebuildStack {
	docker compose down -v
	setDns "84.200.69.80"
	docker compose up -d --build
	setDns "127.0.0.1"
}

function removeStack {
	docker compose down -v
	setDns "84.200.69.80"
}

function restartStack {
	docker compose down
	setDns "84.200.69.80"
    docker compose up -d
	setDns "127.0.0.1"
}

function stopStack {
	docker compose down
	setDns "84.200.69.80"
}

function startStack {
	setDns "84.200.69.80"
	docker compose up -d
	setDns "127.0.0.1"
}

function stackTerminal {
    docker container exec -it $1 bash -l
}

function stackComposer {
	docker container exec -it -w /repos/$2 $3 composer $1
}

case $1 in

	help)
		stackHelp
		;;

	build)
		buildStack
		;;

	rebuild)
		rebuildStack
		;;

	remove)
		removeStack
		;;

	restart)
		restartStack
		;;

	stop)
		stopStack
		;;

	start)
		startStack
		;;

	terminal)
		stackTerminal "$2"
		;;

	composer)
		stackComposer "$2" "$3" "$4"
		;;

	*)
		stackHelp
		;;
esac